{
  'variables': {
    'basesrc': '../..',
    'ac': '<(basesrc)/accessControl',
    'ch': '<(basesrc)/channels',
    'cl': '<(basesrc)/claims',
	'cm': '<(basesrc)/commonCode',
    'fp': '<(basesrc)/fileProxy',
    'kn': '<(basesrc)/keyNegoServer',
	'jb': '<(basesrc)/jlmbignum',
	'jc': '<(basesrc)/jlmcrypto',
    'pr': '<(basesrc)/protocolChannel',
    'ta': '<(basesrc)/tao',
    'tc': '<(basesrc)/tcService',
    'tp': '<(basesrc)/TPMDirect',
    'vt': '<(basesrc)/vault',
    'tao_sources': [
      '<(ta)/tao.h',
      '<(ta)/trustedKeyNego.h',
      '<(ta)/trustedKeyNego.cpp',
      '<(ta)/taoEnvironment.cpp',
      '<(ta)/taoHostServices.cpp',
      '<(ta)/taoInit.cpp',
      '<(ta)/taoSupport.cpp',
      '<(ta)/TPMHostsupport.h',
      '<(ta)/TPMHostsupport.cpp',
      '<(ta)/linuxHostsupport.h',
      '<(ta)/linuxHostsupport.cpp',
      '<(tp)/hashprep.h',
      '<(tp)/hashprep.cpp',
      '<(tp)/hmacsha1.h',
      '<(tp)/hmacsha1.cpp',
      '<(tp)/vTCIDirect.h',
      '<(tp)/vTCIDirect.cpp',
      '<(tc)/tcIO.h',
      '<(tc)/tcIO.cpp',
      '<(tc)/buffercoding.h',
      '<(tc)/buffercoding.cpp',
    ],
  },
  'target_defaults': {
    'product_dir': 'bin',
    'include_dirs': [
      '<(SHARED_INTERMEDIATE_DIR)',
      '<(basesrc)/commonCode',
      '<(basesrc)/jlmbignum',
      '<(basesrc)/jlmcrypto',
      '<(basesrc)/TPMDirect',
      '<(basesrc)/accessControl',
      '<(basesrc)/channels',
      '<(basesrc)/claims',
      '<(basesrc)/protocolChannel',
      '<(basesrc)/fileProxy',
      '<(basesrc)/tao',
      '<(basesrc)/tcService',
      '<(basesrc)/vault',
    ],
    'cflags': [
      '-Wall',
      '-Werror',
      '-Wno-format',
      '-Wno-unknown-pragmas',
    ],
    'defines': [
      'LINUX',
      'TEST',
      '__FLUSHIO__',
      'ENCRYPTTHENMAC',
      'TIXML_USE_STL',
    ],
    'libraries': [
      '-lpthread',
    ],
  },
  'targets': [
    {
      'target_name': 'jlmcommon',
      'type': 'static_library',
      'cflags': [
	    '-O3',
      ],
      'sources': [
	    '<(cm)/jlmTypes.h',
	    '<(cm)/jlmUtility.h',
	    '<(cm)/jlmUtility.cpp',
	    '<(cm)/logging.h',
	    '<(cm)/logging.cpp',
	    '<(cm)/objectManager.h',
	    '<(cm)/timer.h',
	    '<(cm)/tinystr.h',
	    '<(cm)/tinystr.cpp',
	    '<(cm)/tinyxml.h',
	    '<(cm)/tinyxml.cpp',
	    '<(cm)/tinyxmlerror.cpp',
	    '<(cm)/tinyxmlparser.cpp',
      ],
    },
    {
      'target_name': 'jlmbignum',
      'type': 'static_library',
      'cflags': [
        '-O1',
      ],
      # should add a condition for aes/aesni
      'sources': [
    	# bignum
    	'<(jb)/fastArith.h',
    	'<(jb)/fastArith.cpp',
    	'<(jb)/mpFunctions.h',
    	'<(jb)/mpBasicArith.cpp',
    	'<(jb)/mpModArith.cpp',
    	'<(jb)/mpNumTheory.cpp',
    	'<(jb)/mpRand.cpp',
    	'<(jb)/bignum.h',
      ],
      'dependencies': [
	    'jlmcommon',
      ],
    },
    {
      'target_name': 'jlmcrypto',
      'type': 'static_library',
      'cflags': [
	    '-O3',
      ],
      'sources': [
    	# core crypto
    	'<(jc)/algs.h',
    	'<(jc)/cryptoHelper.h',
    	'<(jc)/cryptoHelper.cpp',
    	'<(jc)/encryptedblockIO.h',
    	'<(jc)/encryptedblockIO.cpp',
    	'<(jc)/fileHash.h',
    	'<(jc)/fileHash.cpp',
    	'<(jc)/jlmcrypto.h',
    	'<(jc)/jlmcrypto.cpp',
    	'<(jc)/keys.h',
    	'<(jc)/keys.cpp',
    	'<(jc)/modesandpadding.cpp',
    	'<(jc)/hmacsha256.h',
    	'<(jc)/hmacsha256.cpp',
    	'<(jc)/sha1.cpp',
    	'<(jc)/sha256.cpp',
    	'<(jc)/aesni.h',
    	'<(jc)/aesni.cpp',
    	'<(jc)/encapsulate.h',
    	'<(jc)/encapsulate.cpp',
      ],
      'dependencies': [
    	'jlmbignum',
    	'jlmcommon',
      ],
    },
    {
      'target_name': 'jlmsupport',
      'type': 'static_library',
      'cflags': [
        '-O3',
      ],
      'sources': [
        '<(ac)/accessControl.h',
        '<(ac)/accessControl.cpp',
        '<(ac)/signedAssertion.h',
        '<(ac)/signedAssertion.cpp',
        '<(ch)/channel.h',
        '<(ch)/channel.cpp',
        '<(ch)/safeChannel.h',
        '<(ch)/safeChannel.cpp',
        '<(cl)/cert.h',
        '<(cl)/cert.cpp',
        '<(cl)/quote.h',
        '<(cl)/quote.cpp',
        '<(cl)/validateEvidence.h',
        '<(cl)/validateEvidence.cpp',
        '<(pr)/channelstate.h',
        '<(pr)/request.h',
        '<(pr)/request.cpp',
        '<(pr)/session.h',
        '<(pr)/session.cpp',
        '<(fp)/resource.h',
        '<(fp)/resource.cpp',
        '<(vt)/vault.h',
        '<(vt)/vault.cpp',
      ],
      'dependencies': [
        'jlmcrypto',
        'jlmbignum',
        'jlmcommon',
      ],
    },
    {
      'target_name': 'tao',
      'type': 'static_library',
      'variables': {
      },
      'cflags': [
        '-O3',
      ],
      'sources': [
        '<@(tao_sources)',
      ],
      'dependencies': [
        'jlmsupport',
        'jlmcrypto',
        'jlmbignum',
        'jlmcommon',
      ],
    },
    {
      'target_name': 'taotpm',
      'type': 'static_library',
      'variables': {
      },
      'cflags': [
        '-O3',
      ],
      'defines': [
        'QUOTE2_DEFINED',
        'TPMSUPPORT',
      ],
      'sources': [
        '<@(tao_sources)',
      ],
      'dependencies': [
        'jlmsupport',
        'jlmcrypto',
        'jlmbignum',
        'jlmcommon',
      ],
    },
    {
      'target_name': 'fileServer',
      'type': 'executable',
      'variables': {
        'fs': '<(basesrc)/fileProxy',
      },
      'cflags': [
        '-O3',
      ],
      'sources': [
        '<(fs)/domain.h',
        '<(fs)/fileServer.h',
        '<(fs)/fileServer.cpp',
        '<(fs)/fileServices.h',
        '<(fs)/fileServices.cpp',
        '<(fs)/policyCert.inc',
      ],
      'dependencies': [
        'jlmcommon',
        'jlmbignum',
        'jlmcrypto',
        'jlmsupport',
        'tao',
      ],
    },
    {
      'target_name': 'fileClient',
      'type': 'executable',
      'variables': {
        'fs': '<(basesrc)/fileProxy',
      },
      'cflags': [
        '-O3',
      ],
      'sources': [
        '<(fs)/domain.h',
        '<(fs)/fileClient.h',
        '<(fs)/fileClient.cpp',
        '<(fs)/fileServices.h',
        '<(fs)/fileServices.cpp',
        '<(fs)/policyCert.inc',
        '<(fs)/fileTester.h',
        '<(fs)/fileTester.cpp',
      ],
      'dependencies': [
        'jlmcommon',
        'jlmbignum',
        'jlmcrypto',
        'jlmsupport',
        'tao',
      ],
    },
    {
      'target_name': 'cryptUtility',
      'type': 'executable',
      'variables': {
        'cu': '<(basesrc)/cryptUtility',
      },
      'cflags': [
        '-O3',
      ],
      'sources': [
        '<(cu)/cryptUtility.cpp',
        '<(cu)/cryptUtility.h',
      ],
      'dependencies': [
        'jlmcommon',
        'jlmbignum',
        'jlmcrypto',
        'jlmsupport',
        'tao',
      ],
    },
    {
      'target_name': 'tcService',
      'type': 'executable',
      'variables': {
        'tc': '<(basesrc)/tcService',
      },
      'cflags': [
        '-O3',
      ],
      'sources': [
        '<(tc)/policyglobals.h',
        '<(tc)/tcService.h',
        '<(tc)/tcService.cpp',
        '<(tc)/tcServiceCodes.h',
        '<(tc)/tciohdr.h',
        '<(tc)/policyCert.inc',
      ],
      'dependencies': [
        'jlmcommon',
        'jlmbignum',
        'jlmcrypto',
        'jlmsupport',
        'taotpm',
      ],
    },
    {
      'target_name': 'keyNegoServer',
      'type': 'executable',
      'variables': {
        'tc': '<(basesrc)/tcService',
      },
      'cflags': [
        '-O3',
      ],
      'sources': [
        '<(kn)/keyNegoServer.h',
        '<(kn)/keyNegoServer.cpp',
        '<(kn)/policyglobals.h',
        '<(kn)/validHashes.inc',
      ],
      'dependencies': [
        'jlmcommon',
        'jlmbignum',
        'jlmcrypto',
        'jlmsupport',
        'taotpm',
      ],
    },
  ]
}
