# Copyright (c) 2013, Google Inc. All rights reserved.
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

{
  'target_defaults': {
    'cflags': [
      '-Wall',
      '-Werror',
      '-std=c++0x',
    ],
    'product_dir': 'bin',
  },
  'targets': [
    {
      'target_name': 'cloudproxy',
      'type': 'static_library',
      'variables': {
        'src': 'cloudproxy',
      },
      'sources': [
        '<(src)/cloudproxy.proto',
        '<(src)/cloud_auth.cc',
        '<(src)/cloud_auth.h',
        '<(src)/cloud_client.cc',
        '<(src)/cloud_client.h',
        '<(src)/cloud_server.cc',
        '<(src)/cloud_server.h',
        '<(src)/cloud_server_thread_data.cc',
        '<(src)/cloud_server_thread_data.h',
        '<(src)/cloud_user_manager.cc',
        '<(src)/cloud_user_manager.h',
        '<(src)/file_client.cc',
        '<(src)/file_client.h',
        '<(src)/file_server.cc',
        '<(src)/file_server.h',
        '<(src)/util.cc',
        '<(src)/util.h',
      ],
      'libraries': [
        '-lcrypto',
        '-lssl',
        '-lpthread',
      ],
      'include_dirs': [
        '<(SHARED_INTERMEDIATE_DIR)',
        '.',
      ],
      'dependencies': [
        'tao',
	'third_party/gflags/gflags.gyp:gflags',
	'third_party/google-glog/glog.gyp:glog',
	'third_party/keyczar/keyczar.gyp:keyczar',
	'third_party/protobuf/protobuf.gyp:protobuf',
      ],
      'export_dependent_settings': [
	'third_party/gflags/gflags.gyp:gflags',
	'third_party/google-glog/glog.gyp:glog',
	'third_party/keyczar/keyczar.gyp:keyczar',
	'third_party/protobuf/protobuf.gyp:protobuf',
      ],
      'includes': [
        'build/protoc.gypi',
      ],
      'direct_dependent_settings': {
        'libraries': [
          '-lcrypto',
          '-lssl',
          '-lpthread',
        ],
        'include_dirs': [
          '<(SHARED_INTERMEDIATE_DIR)',
          '.',
        ],
      },
    },
    {
      'target_name': 'cloudproxy_test',
      'type': 'executable',
      'variables': {
        'src': 'cloudproxy',
      },
      'sources': [
        '<(src)/util_unittests.cc',
      ],
      'include_dirs': [
        '.',
      ],
      'dependencies': [
        'tao',
        'cloudproxy',
	'third_party/gflags/gflags.gyp:gflags',
	'third_party/google-glog/glog.gyp:glog',
	'third_party/keyczar/keyczar.gyp:keyczar',
	'third_party/protobuf/protobuf.gyp:protobuf',
        'third_party/googlemock/gmock.gyp:gmock',
        'third_party/googlemock/gtest/gtest.gyp:gtest',
      ],
    },
    {
      'target_name': 'tao_test',
      'type': 'executable',
      'variables': {
        'src': 'tao',
      },
      'sources': [
        '<(src)/fake_tao_unittests.cc',
      ],
      'include_dirs': [
        '.',
      ],
      'dependencies': [
        'tao',
        'third_party/googlemock/gmock.gyp:gmock',
        'third_party/googlemock/gtest/gtest.gyp:gtest',
      ],
    },
    {
      'target_name': 'tao',
      'type': 'static_library',
      'variables': {
        'src': 'tao',
      },
      'sources': [
        '<(src)/attestation.proto',
	'<(src)/fake_tao.h',
	'<(src)/fake_tao.cc',
        '<(src)/hosted_programs.proto',
	'<(src)/keyczar_public_key.proto',
        '<(src)/pipe_tao_channel.h',
        '<(src)/pipe_tao_channel.cc',
	'<(src)/sealed_data.proto',
        '<(src)/tao.h',
	'<(src)/tao_authorization_manager.h',
        '<(src)/tao_channel.h',
        '<(src)/tao_channel.cc',
        '<(src)/tao_channel_rpc.proto',
        '<(src)/tao_binary_cache.h',
	'<(src)/whitelist_authorization_manager.h',
	'<(src)/whitelist_authorization_manager.cc',
      ],
      'libraries': [
        '-lcrypto',
        '-lssl',
      ],
      'include_dirs': [
        '<(SHARED_INTERMEDIATE_DIR)',
        '.',
      ],
      'includes': [
        'build/protoc.gypi',
      ],
      'dependencies': [
	'third_party/gflags/gflags.gyp:gflags',
	'third_party/google-glog/glog.gyp:glog',
	'third_party/keyczar/keyczar.gyp:keyczar',
	'third_party/protobuf/protobuf.gyp:protobuf',
      ],        
      'direct_dependent_settings': {
        'libraries': [
          '-lcrypto',
          '-lssl',
        ],
        'include_dirs': [
          '<(SHARED_INTERMEDIATE_DIR)',
          '.',
        ],
      },
      'export_dependent_settings': [
	'third_party/gflags/gflags.gyp:gflags',
	'third_party/google-glog/glog.gyp:glog',
	'third_party/keyczar/keyczar.gyp:keyczar',
	'third_party/protobuf/protobuf.gyp:protobuf',
      ],
    },
    {
      'target_name': 'test',
      'type': 'executable',
      'variables': { 'src' : 'apps', },
      'sources': [ '<(src)/main.cc', ],
      'include_dirs': [ '.', ],
      'dependencies': [ 'cloudproxy', ],
    },
    {
      'target_name': 'sign_acls',
      'type': 'executable',
      'variables': { 'src' : 'apps', },
      'sources': [ '<(src)/sign_acls.cc', ],
      'include_dirs': [ '.', ],
      'dependencies': [ 'cloudproxy', ],
    },
    {
      'target_name': 'verify_acls',
      'type': 'executable',
      'variables': { 'src' : 'apps', },
      'sources': [ '<(src)/verify_acls.cc', ],
      'include_dirs': [ '.', ],
      'dependencies': [ 'cloudproxy', ],
    },
    {
      'target_name': 'sign_pub_key',
      'type': 'executable',
      'variables': { 'src' : 'apps', },
      'sources': [ '<(src)/sign_pub_key.cc', ],
      'include_dirs': [ '.', ],
      'dependencies': [ 'cloudproxy', ],
    },
    {
      'target_name': 'verify_pub_key',
      'type': 'executable',
      'variables': { 'src' : 'apps', },
      'sources': [ '<(src)/verify_pub_key.cc', ],
      'include_dirs': [ '.', ],
      'dependencies': [ 'cloudproxy', ],
    },
    {
      'target_name': 'client',
      'type': 'executable',
      'variables': { 'src' : 'apps', },
      'sources': [ '<(src)/client.cc', ],
      'include_dirs': [ '.', ],
      'dependencies': [
        'cloudproxy',
	'tao',
      ],
    },
    {
      'target_name': 'fclient',
      'type': 'executable',
      'variables': { 'src' : 'apps', },
      'sources': [ '<(src)/fclient.cc', ],
      'include_dirs': [ '.', ],
      'dependencies': [
        'cloudproxy',
	'tao',
      ],
    },
    {
      'target_name': 'server',
      'type': 'executable',
      'variables': { 'src' : 'apps', },
      'sources': [ '<(src)/server.cc', ],
      'include_dirs': [ '.', ],
      'dependencies': [
         'cloudproxy',
         'tao',
      ],
    },
    {
      'target_name': 'fserver',
      'type': 'executable',
      'variables': { 'src' : 'apps', },
      'sources': [ '<(src)/fserver.cc', ],
      'include_dirs': [ '.', ],
      'dependencies': [
         'cloudproxy',
         'tao',
      ],
    },
    {
      'target_name': 'create_ecdsa',
      'type': 'executable',
      'variables': { 'src' : 'apps', },
      'sources': [ '<(src)/create_ecdsa.cc', ],
      'include_dirs': [ '.', ],
      'dependencies': [
         'cloudproxy',
      ],
    },
    {
      'target_name': 'hash_file',
      'type': 'executable',
      'variables': { 'src' : 'apps', },
      'sources': [ '<(src)/hash_file.cc', ],
      'include_dirs': [ '.', ],
      'libraries' : [
        '-lcrypto',
      ],
      'dependencies': [
        'third_party/google-glog/glog.gyp:glog',
	'third_party/gflags/gflags.gyp:gflags',
	'third_party/keyczar/keyczar.gyp:keyczar',
      ],        
    },
    {
      'target_name': 'sign_whitelist',
      'type': 'executable',
      'variables': { 'src' : 'apps', },
      'sources': [ '<(src)/sign_whitelist.cc', ],
      'include_dirs': [ '.', ],
      'dependencies': [ 'tao', ],
    },
    # {
    #     'target_name': 'legacy_tao_channel',
    #     'type': 'static_library',
    #     'variables': {
    #         'src': 'legacy_tao',
    #         'basejlm': '../Code',
    #         'ac': '<(basejlm)/accessControl',
    #         'ch': '<(basejlm)/channels',
    #         'cl': '<(basejlm)/claims',
    #         'cm': '<(basejlm)/commonCode',
    #         'fp': '<(basejlm)/fileProxy',
    #         'kn': '<(basejlm)/keyNegoServer',
    #         'jb': '<(basejlm)/jlmbignum',
    #         'jc': '<(basejlm)/jlmcrypto',
    #         'pr': '<(basejlm)/protocolChannel',
    #         'ta': '<(basejlm)/tao',
    #         'tc': '<(basejlm)/tcService',
    #         'tp': '<(basejlm)/TPMDirect',
    #         'vt': '<(basejlm)/vault',
    #     },
    #     'cflags': [
    #         '-Wall',
    #         #'-Werror',
    #         '-Wno-unknown-pragmas',
    #         '-Wno-format',
    #         '-O3',
    #     ],
    #     'libraries': [
    #         '-lpthread',
    #     ],
    #     'defines': [
    #         'LINUX',
    #         'FILECLIENT',
    #         'TEST',
    #         'TIXML_USE_STL',
    #         '__FLUSHIO__',
    #         'ENCRYPTTHENMAC',
    #     ],
    #     'include_dirs': [
    #         '.',
    #         '<(fp)',
    #         '<(cm)',
    #         '<(jc)',
    #         '<(jb)',
    #         '<(cl)',
    #         '<(ta)',
    #         '<(tc)',
    #         '<(tp)',
    #         '<(ch)',
    #         '<(pr)',
    #         '<(ac)',
    #         '<(vt)',
    #     ],
    #     'sources': [
    #         '<(src)/legacy_tao_channel.h',
    #         '<(src)/legacy_tao_channel.cc',
    #         '<(cm)/jlmUtility.cpp',
    #         '<(jc)/keys.cpp',
    #         '<(jc)/cryptoHelper.cpp',
    #         '<(jc)/jlmcrypto.cpp',
    #         '<(jc)/aesni.cpp',
    #         '<(jc)/sha256.cpp',
    #         '<(jc)/sha1.cpp',
    #         '<(jc)/hmacsha256.cpp',
    #         '<(jc)/encryptedblockIO.cpp',
    #         '<(jc)/modesandpadding.cpp',
    #         '<(ta)/taoAttest.cpp',
    #         '<(ta)/taoSupport.cpp',
    #         '<(ta)/taoEnvironment.cpp',
    #         '<(ta)/taoHostServices.cpp',
    #         '<(ta)/taoInit.cpp',
    #         '<(ta)/linuxHostsupport.cpp',
    #         '<(ta)/trustedKeyNego.cpp',
    #         '<(ta)/TPMHostsupport.cpp',
    #         '<(tp)/vTCIDirect.cpp',
    #         '<(tp)/hmacsha1.cpp',
    #         '<(cl)/cert.cpp',
    #         '<(cl)/quote.cpp',
    #         '<(cm)/tinyxml.cpp',
    #         '<(cm)/tinyxmlparser.cpp',
    #         '<(cm)/tinystr.cpp',
    #         '<(cm)/tinyxmlerror.cpp',
    #         '<(ch)/channel.cpp',
    #         '<(ch)/safeChannel.cpp',
    #         '<(cl)/validateEvidence.cpp',
    #         '<(tc)/buffercoding.cpp',
    #         '<(tc)/tcIO.cpp',
    #         '<(tp)/hashprep.cpp',
    #         '<(cm)/logging.cpp',
    #         '<(fp)/policyCert.inc',
    #     ],
    #     'dependencies': [
    #         '../Code/jlmtao.gyp:bignum_O1',
    #         'tao',
    #         'cloudproxy',
    #         'third_party/gflags/gflags.gyp:gflags',
    #         'third_party/google-glog/glog.gyp:glog',
    #         'third_party/keyczar/keyczar.gyp:keyczar',
    #         'third_party/protobuf/protobuf.gyp:protobuf',
    #     ],
    #     'direct_dependent_settings': {
    #       'include_dirs': [
    #         '<(SHARED_INTERMEDIATE_DIR)',
    #         '.',
    #         '<(fp)',
    #         '<(cm)',
    #         '<(jc)',
    #         '<(jb)',
    #         '<(cl)',
    #         '<(ta)',
    #         '<(tc)',
    #         '<(tp)',
    #         '<(ch)',
    #         '<(pr)',
    #         '<(ac)',
    #         '<(vt)',
    #       ],
    #     },
    #     'dependencies': [
    #       '../Code/jlmtao.gyp:bignum_O1',
    #       'tao',
    #       'cloudproxy',
    #       'third_party/gflags/gflags.gyp:gflags',
    #       'third_party/google-glog/glog.gyp:glog',
    #       'third_party/keyczar/keyczar.gyp:keyczar',
    #       'third_party/protobuf/protobuf.gyp:protobuf',
    #     ],
    #     'export_dependent_settings': [
    #         'tao',
    #         'cloudproxy',
    #     ],
    # },
    # {
    #   'target_name': 'bootstrap',
    #   'type': 'executable',
    #   'variables': { 'src' : 'apps', },
    #   'sources': [ '<(src)/bootstrap.cc', ],
    #   'include_dirs': [ '.', ],
    #   'dependencies': [
    #     'legacy_tao_channel',
    #   ],
    # },
    
  ]
}
