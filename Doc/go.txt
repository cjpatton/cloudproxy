Let ROOT be the root of the CloudProxy source tree

> cd ${ROOT}/go/src/cloudproxy/tao
> go build
> go test

Now, just for extra information about Go style and such: 

- golint will check for obvious style violations. You can get it by running

go get github.com/golang/lint/golint

Then run golint file.go

- go vet will check for correctness issues. You can get it by running

go get code.google.com/p/go.tools/cmd/vet

Then run go vet file.go

- go test -coverprofile=c.out  will generate test coverage stats. You can get the cover tool by running 

go get code.google.com/p/go.tools/cmd/cover

To see a nice HTML representation of test coverage (I don't think ours is great at the moment), run

go tool cover -html=c.out

after running the test command.

- The standard conventions of Go are covered very nicely in the article Effective Go:

http://golang.org/doc/effective_go.html

Set GOPATH.

Your GOPATH should be the root above your source directory where you want it to find things. For example, in our case, you should have at least

export GOPATH=${ROOT}/go

where ROOT is the root of the cloudproxy source tree. You might want to have other paths, too. I usually have $HOME in my gopath, since then it will install binaries it builds into ${HOME}/bin and will install go source code it downloads into ${HOME}/src. For example, if you execute 

go get github.com/kevinawalsh/datalog

it will add the directory

${HOME}/src/github.com/kevinawalsh/datalog

