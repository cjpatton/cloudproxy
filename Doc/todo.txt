Phase I

Done 1. Measure hashes and add to KeyNegoServer db

Done 2. Remove TSS

Done 5. Change fileProxy --> FileServer

3. Compile kernel

4. Construct Initramfs
    Copy tcService, FileClient, FileProxy and dynamic link libraries to intiramfs.
    Networking files?
    Don't switch root
    add tcioDD, tpm, dmcrypt

6. PCR18

7. newTrustedHome

8. Script to start tcService, FileClient and FileServer.

9. Macrobenchmark


FileClient:
    linux-vdso.so.1 =>  (0x00007fff9b9ff000)
    libpthread.so.0 => /lib/x86_64-linux-gnu/libpthread.so.0 (0x00007f26bb143000)
    libstdc++.so.6 => /usr/lib/x86_64-linux-gnu/libstdc++.so.6 (0x00007f26bae43000)
    libgcc_s.so.1 => /lib/x86_64-linux-gnu/libgcc_s.so.1 (0x00007f26bac2c000)
    libc.so.6 => /lib/x86_64-linux-gnu/libc.so.6 (0x00007f26ba86d000)
    /lib64/ld-linux-x86-64.so.2 (0x00007f26bb375000)
    libm.so.6 => /lib/x86_64-linux-gnu/libm.so.6 (0x00007f26ba571000)
FileProxy:
    same
tcService:
    linux-vdso.so.1 =>  (0x00007fff81b26000)
    libtspi.so.1 => /usr/lib/libtspi.so.1 (0x00007f6c2a94b000)
    libproc-3.2.8.so => /lib/libproc-3.2.8.so (0x00007f6c2a725000)
    libstdc++.so.6 => /usr/lib/x86_64-linux-gnu/libstdc++.so.6 (0x00007f6c2a424000)
    libgcc_s.so.1 => /lib/x86_64-linux-gnu/libgcc_s.so.1 (0x00007f6c2a20e000)
    libc.so.6 => /lib/x86_64-linux-gnu/libc.so.6 (0x00007f6c29e4f000)
    libpthread.so.0 => /lib/x86_64-linux-gnu/libpthread.so.0 (0x00007f6c29c31000)
    libcrypto.so.1.0.0 => /lib/x86_64-linux-gnu/libcrypto.so.1.0.0 (0x00007f6c29869000)
    libm.so.6 => /lib/x86_64-linux-gnu/libm.so.6 (0x00007f6c2956d000)
    /lib64/ld-linux-x86-64.so.2 (0x00007f6c2abc9000)
    libdl.so.2 => /lib/x86_64-linux-gnu/libdl.so.2 (0x00007f6c29368000)
    libz.so.1 => /lib/x86_64-linux-gnu/libz.so.1 (0x00007f6c29151000)

    libproc

-------------------------------------------


Phase II


8. Other programs (fileProxy/fileClient, keyNego, etc)
        emergency key recovery program
            revocation
            2048 bit key

9. Hypervisor
    Hv itself
    Management partition
    VM's
        Migration
        Update


--------------------------------------------


claims/accessControl.cpp:229:       // Fix
claims/accessControl.cpp:244:       // Fix: Add condition
claims/accessControl.cpp:308:       // Fix: speaksfor
fileProxy/request.cpp:454:          // Fix
fileProxy/request.cpp:1279:         // Fix: Subject
fileProxy/trustedKeyNego.cpp:270:   // Fix: pull out key

---------------------------------------------


1/29 Doc fixes from Tom

As we discussed yesterday, I'm continuing to follow the instructions
to set everything up, and I have found a few places in one step that
are not clear to me:

1. in KeySetup.txt, the programname for the policyCert is not
specified. I think this should be FileProxy. Is this right?
The name is not actually used anymore.  This is one of the things I need to clean up.  You can call it fileProxy for now.
2. in the same file, the name of the include file to generate is not
specified. But it looks like the code in fileProxy has the name
"policyCert.inc" hard coded (and in fact, a file named policyCert.inc
is in the repo).
policyCert.inc is generated by the cryptUtility tool.  I'll fix the instructions. 
3. the instructions in KeySetup.txt say to put the include file in
tcService, but the makefile and code for tcService don't seem to
include it anywhere. There is also a policyCert.inc file in the
tcService directory, but "grep policyCert *" doesn't reveal any uses
of the name in any of the files in this directory.  Is this file
supposed to be there at all?
Operationally, no.  tcService is measured as part of the boot and the key is in tcioDD.  When it becomes a partition in the Hv, it's needed again in tcService.

1. there are no instructions in OperatingKeyNegoServer

2. the tcioDD instructions are incomplete
  - they don't say how to set up the makefile (e.g., to find the
current linux headers)
  - they don't gives the steps to build tcioDD
  - I'm currently having trouble getting tcioDD to build against the
kernel I built from source: it can't find asm/system.h, but I think
this is to do with how I have the kernel set up. I'm now following
some Ubuntu instructions in detail to make sure I get all the headers
into the right locations.



