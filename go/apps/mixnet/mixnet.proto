// Copyright (c) 2015, Google, Inc.  All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package mixnet;

enum DirectiveType {
  ERROR = 0;   // Signal an error to peer.
  FATAL = 1;   // Signal an error and that the connection was closed.
  CREATE = 3;  // Create a circuit.
  CREATED = 4; // Reply from router confirming the circuit was created.
  DESTROY = 5; // Destroy a circuit.
}

message Directive {
  required DirectiveType type = 1;

  // CREATE, a sequence of addresses (e.g. "192.168.1.1:7007")
  // comprising the circuit to be constructed over the mixnet. Each address
  // corresponds to a mixnet router except the last, which is the service the
  // proxy would like to contact.
  repeated string addrs = 2;

  // ERROR or FATAL, an error message.
  optional string error = 3;
}

// Protocol buffer for a message or directive in a send queue.
message Queueable {
  // Serial identifier of the sender.
  required uint64 id = 1;

  // If the connection needs to be set up, specify the address the host.
  optional string addr = 2;

  optional Directive dir = 3;
  optional bytes msg = 4;
}
