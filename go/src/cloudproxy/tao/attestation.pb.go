// Code generated by protoc-gen-go.
// source: attestation.proto
// DO NOT EDIT!

/*
Package tao is a generated protocol buffer package.

It is generated from these files:
	attestation.proto
	hosted_programs.proto
	keys.proto
	kvm_unix_tao_channel_params.proto
	pipe_tao_channel_params.proto
	sealed_data.proto
	signature.proto
	tao_ca.proto
	tao_channel_rpc.proto
	tao_child_channel_params.proto

It has these top-level messages:
	Statement
	Attestation
*/
package tao

import proto "code.google.com/p/goprotobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type AttestationType int32

const (
	AttestationType_UNKNOWN       AttestationType = 0
	AttestationType_ROOT          AttestationType = 1
	AttestationType_INTERMEDIATE  AttestationType = 2
	AttestationType_TPM_1_2_QUOTE AttestationType = 3
)

var AttestationType_name = map[int32]string{
	0: "UNKNOWN",
	1: "ROOT",
	2: "INTERMEDIATE",
	3: "TPM_1_2_QUOTE",
}
var AttestationType_value = map[string]int32{
	"UNKNOWN":       0,
	"ROOT":          1,
	"INTERMEDIATE":  2,
	"TPM_1_2_QUOTE": 3,
}

func (x AttestationType) Enum() *AttestationType {
	p := new(AttestationType)
	*p = x
	return p
}
func (x AttestationType) String() string {
	return proto.EnumName(AttestationType_name, int32(x))
}
func (x *AttestationType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AttestationType_value, data, "AttestationType")
	if err != nil {
		return err
	}
	*x = AttestationType(value)
	return nil
}

type Statement struct {
	Time             *int64  `protobuf:"varint,1,req,name=time" json:"time,omitempty"`
	Expiration       *int64  `protobuf:"varint,2,req,name=expiration" json:"expiration,omitempty"`
	Data             []byte  `protobuf:"bytes,3,req,name=data" json:"data,omitempty"`
	HashAlg          *string `protobuf:"bytes,4,opt,name=hash_alg" json:"hash_alg,omitempty"`
	Hash             *string `protobuf:"bytes,5,opt,name=hash" json:"hash,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Statement) Reset()         { *m = Statement{} }
func (m *Statement) String() string { return proto.CompactTextString(m) }
func (*Statement) ProtoMessage()    {}

func (m *Statement) GetTime() int64 {
	if m != nil && m.Time != nil {
		return *m.Time
	}
	return 0
}

func (m *Statement) GetExpiration() int64 {
	if m != nil && m.Expiration != nil {
		return *m.Expiration
	}
	return 0
}

func (m *Statement) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *Statement) GetHashAlg() string {
	if m != nil && m.HashAlg != nil {
		return *m.HashAlg
	}
	return ""
}

func (m *Statement) GetHash() string {
	if m != nil && m.Hash != nil {
		return *m.Hash
	}
	return ""
}

type Attestation struct {
	Type                *AttestationType `protobuf:"varint,1,req,name=type,enum=tao.AttestationType" json:"type,omitempty"`
	SerializedStatement []byte           `protobuf:"bytes,2,req,name=serialized_statement" json:"serialized_statement,omitempty"`
	Signature           []byte           `protobuf:"bytes,3,req,name=signature" json:"signature,omitempty"`
	Quote               []byte           `protobuf:"bytes,4,opt,name=quote" json:"quote,omitempty"`
	Cert                []byte           `protobuf:"bytes,5,opt,name=cert" json:"cert,omitempty"`
	XXX_unrecognized    []byte           `json:"-"`
}

func (m *Attestation) Reset()         { *m = Attestation{} }
func (m *Attestation) String() string { return proto.CompactTextString(m) }
func (*Attestation) ProtoMessage()    {}

func (m *Attestation) GetType() AttestationType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return AttestationType_UNKNOWN
}

func (m *Attestation) GetSerializedStatement() []byte {
	if m != nil {
		return m.SerializedStatement
	}
	return nil
}

func (m *Attestation) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

func (m *Attestation) GetQuote() []byte {
	if m != nil {
		return m.Quote
	}
	return nil
}

func (m *Attestation) GetCert() []byte {
	if m != nil {
		return m.Cert
	}
	return nil
}

func init() {
	proto.RegisterEnum("tao.AttestationType", AttestationType_name, AttestationType_value)
}
