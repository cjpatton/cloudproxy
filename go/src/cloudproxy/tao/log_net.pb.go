// Code generated by protoc-gen-go.
// source: log_net.proto
// DO NOT EDIT!

package tao

import proto "code.google.com/p/goprotobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type LogTimestamp struct {
	TmSec            *int32 `protobuf:"varint,1,req,name=tm_sec" json:"tm_sec,omitempty"`
	TmMin            *int32 `protobuf:"varint,2,req,name=tm_min" json:"tm_min,omitempty"`
	TmHour           *int32 `protobuf:"varint,3,req,name=tm_hour" json:"tm_hour,omitempty"`
	TmMday           *int32 `protobuf:"varint,4,req,name=tm_mday" json:"tm_mday,omitempty"`
	TmMon            *int32 `protobuf:"varint,5,req,name=tm_mon" json:"tm_mon,omitempty"`
	TmYear           *int32 `protobuf:"varint,6,req,name=tm_year" json:"tm_year,omitempty"`
	TmWday           *int32 `protobuf:"varint,7,req,name=tm_wday" json:"tm_wday,omitempty"`
	TmYday           *int32 `protobuf:"varint,8,req,name=tm_yday" json:"tm_yday,omitempty"`
	TmIsdst          *int32 `protobuf:"varint,9,req,name=tm_isdst" json:"tm_isdst,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *LogTimestamp) Reset()         { *m = LogTimestamp{} }
func (m *LogTimestamp) String() string { return proto.CompactTextString(m) }
func (*LogTimestamp) ProtoMessage()    {}

func (m *LogTimestamp) GetTmSec() int32 {
	if m != nil && m.TmSec != nil {
		return *m.TmSec
	}
	return 0
}

func (m *LogTimestamp) GetTmMin() int32 {
	if m != nil && m.TmMin != nil {
		return *m.TmMin
	}
	return 0
}

func (m *LogTimestamp) GetTmHour() int32 {
	if m != nil && m.TmHour != nil {
		return *m.TmHour
	}
	return 0
}

func (m *LogTimestamp) GetTmMday() int32 {
	if m != nil && m.TmMday != nil {
		return *m.TmMday
	}
	return 0
}

func (m *LogTimestamp) GetTmMon() int32 {
	if m != nil && m.TmMon != nil {
		return *m.TmMon
	}
	return 0
}

func (m *LogTimestamp) GetTmYear() int32 {
	if m != nil && m.TmYear != nil {
		return *m.TmYear
	}
	return 0
}

func (m *LogTimestamp) GetTmWday() int32 {
	if m != nil && m.TmWday != nil {
		return *m.TmWday
	}
	return 0
}

func (m *LogTimestamp) GetTmYday() int32 {
	if m != nil && m.TmYday != nil {
		return *m.TmYday
	}
	return 0
}

func (m *LogTimestamp) GetTmIsdst() int32 {
	if m != nil && m.TmIsdst != nil {
		return *m.TmIsdst
	}
	return 0
}

type LogMessage struct {
	Severity         *int32        `protobuf:"varint,1,req,name=severity" json:"severity,omitempty"`
	FullFilename     *string       `protobuf:"bytes,2,req,name=full_filename" json:"full_filename,omitempty"`
	BaseFilename     *string       `protobuf:"bytes,3,req,name=base_filename" json:"base_filename,omitempty"`
	Line             *int32        `protobuf:"varint,4,req,name=line" json:"line,omitempty"`
	Time             *LogTimestamp `protobuf:"bytes,5,req,name=time" json:"time,omitempty"`
	Message          *string       `protobuf:"bytes,6,req,name=message" json:"message,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *LogMessage) Reset()         { *m = LogMessage{} }
func (m *LogMessage) String() string { return proto.CompactTextString(m) }
func (*LogMessage) ProtoMessage()    {}

func (m *LogMessage) GetSeverity() int32 {
	if m != nil && m.Severity != nil {
		return *m.Severity
	}
	return 0
}

func (m *LogMessage) GetFullFilename() string {
	if m != nil && m.FullFilename != nil {
		return *m.FullFilename
	}
	return ""
}

func (m *LogMessage) GetBaseFilename() string {
	if m != nil && m.BaseFilename != nil {
		return *m.BaseFilename
	}
	return ""
}

func (m *LogMessage) GetLine() int32 {
	if m != nil && m.Line != nil {
		return *m.Line
	}
	return 0
}

func (m *LogMessage) GetTime() *LogTimestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

func (m *LogMessage) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func init() {
}
